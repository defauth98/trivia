{"version":3,"sources":["assets/showLogo.png","assets/showDoMilhao.ogg","assets/Audioslave.ogg","helpers/storage.js","services/triviaAPI.js","helpers/shuffle.js","redux/actions/actions.js","components/LoginForm.jsx","pages/Login.jsx","components/Alternative.jsx","components/Timer.jsx","components/Question.jsx","components/Header.jsx","components/NextQuestionBtn.jsx","pages/Jogo.jsx","pages/Configuracoes.jsx","components/FeedbackMsg.jsx","components/FeedbackResults.jsx","pages/Feedback.jsx","pages/Ranking.jsx","components/routes.js","App.js","serviceWorker.js","redux/reducers/login.js","helpers/getGravatar.js","redux/reducers/jogo.js","redux/reducers/timer.js","redux/reducers/reducers.js","redux/store/store.js","index.js"],"names":["module","exports","saveStorage","key","value","localStorage","setItem","getRanking","ranking","storage","getItem","getStorage","JSON","parse","getToken","a","fetch","response","json","data","token","fetchQuestions","results","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","getQuestionsError","payload","type","setAnswerVisibility","visibility","lastQuestion","redirect","timerThunk","dispatch","timerID","setInterval","startTimer","LoginForm","handleInputChange","this","props","onChange","className","data-testid","placeholder","name","id","required","handleLogin","disableBtn","src","showLogo","width","alt","inputs","to","disabled","onClick","Component","Login","state","email","bind","verifyEmail","verifyName","checkLogin","target","setState","saveUserLogin","stringify","player","score","test","String","toLowerCase","check","showDoMilhao","autoPlay","controls","React","connect","user","saveUser","Alternative","showImg","showFaustao","handleClick","toasty","e","console","log","setAnswerVisibilityDispatch","verifyAnswer","stopTimerDispatch","alternative","correctAnswer","answerVisibility","decode","imgToasty","imgFaustao","game","answer_visibility","Timer","time","timer","Question","calcScore","difficultyConditional","saveInStorage","question","updateScoreDispatch","correct_answer","innerHTML","difficulty","Number","category","aleatory_answers","questionReplaced","map","index","Header","gravatarEmail","NextQuestionBtn","nextQuestionDispatch","lastQuestionDispatch","questions","currentQuestionIndex","resetTimerDispatch","prevRanking","saveRanking","Jogo","getQuestions","redirectToFeedback","timeID","incorrect_answers","Configuracoes","FeedbackMsg","assertions","renderMessage","FeedbackResults","Feedback","setRedirect","Ranking","loadRanking","sortRanking","sort","b","reduce","rank","objPlayer","find","Audioslave","Routes","exact","path","component","App","Boolean","window","location","hostname","match","INITIAL_STATE","loginReducer","action","getGravatar","hashMD5","md5","toString","loading","gameReducer","timerReducer","clearInterval","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05fc90a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/showLogo.159c8188.png\";","module.exports = __webpack_public_path__ + \"static/media/showDoMilhao.17580169.ogg\";","module.exports = __webpack_public_path__ + \"static/media/Audioslave.ef0d030f.ogg\";","export const saveStorage = (key, value) => {\n  localStorage.setItem(key, value);\n};\n\nexport const getStorage = (key) => {\n  const storage = localStorage.getItem(key);\n  if (storage) return storage;\n};\n\nexport const getRanking = () => {\n  const ranking = getStorage('ranking');\n  if (ranking) return JSON.parse(ranking);\n\n  return [];\n};\n\nexport const saveRanking = (value) => {\n  const prevRanking = getRanking();\n  const ranking = JSON.stringify([...prevRanking, value]);\n  saveStorage('ranking', ranking);\n};\n","export const getToken = async () => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const data = await response.json();\n  const { token } = data;\n  return token;\n};\n\nexport const fetchQuestions = async () => {\n  const token = await getToken();\n  localStorage.setItem('token', token);\n  const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n  const data = await response.json();\n\n  return data.results;\n};\n","// link: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport default function shuffle(array) {\n  let currentIndex = array.length; let randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n","import { fetchQuestions } from '../../services/triviaAPI';\nimport shuffle from '../../helpers/shuffle';\n\nexport const SAVE_USER = 'SAVE_USER';\nexport const GET_QUESTIONS_SUCCESS = 'GET_API_SUCCESS';\nexport const GET_QUESTIONS_ERROR = 'GET_API_ERROR';\nexport const GET_QUESTIONS = 'GET_API';\nexport const SET_ANSWER_VISIBILITY = 'SET_ANSWER_VISIBILITY';\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\nexport const LAST_QUESTION = 'LAST_QUESTION';\nexport const SET_TIME = 'SET_TIME';\nexport const START_TIMER = 'START_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const RESET_TIMER = 'RESET_TIMER';\n\nexport const saveUser = (user) => ({\n  type: SAVE_USER,\n  payload: user,\n});\n\nconst getQuestions = () => ({\n  type: GET_QUESTIONS,\n});\n\nexport const getQuestionsSuccess = (payload) => ({\n  type: GET_QUESTIONS_SUCCESS,\n  payload,\n});\n\nexport const getQuestionsError = (payload) => ({\n  type: GET_QUESTIONS_ERROR,\n  payload,\n});\n\nexport const getQuestionsThunk = () => async (dispatch) => {\n  dispatch(getQuestions());\n\n  try {\n    const fetch = await fetchQuestions();\n\n    const questions = fetch.map((question) => ({\n      ...question,\n      aleatory_answers: shuffle([\n        ...question.incorrect_answers,\n        question.correct_answer]) }));\n\n    dispatch(getQuestionsSuccess(questions));\n  } catch (error) {\n    dispatch(getQuestionsError(error));\n  }\n};\n\nexport const setAnswerVisibility = (visibility) => ({\n  type: SET_ANSWER_VISIBILITY,\n  payload: visibility,\n});\n\nexport const nextQuestion = () => ({\n  type: NEXT_QUESTION,\n});\n\nexport const lastQuestion = (redirect) => ({\n  type: LAST_QUESTION,\n  payload: redirect,\n});\n\nexport const updateScore = (payload) => ({\n  type: UPDATE_SCORE,\n  payload,\n});\n\nconst startTimer = (timerID) => ({\n  type: START_TIMER,\n  payload: timerID,\n});\n\nconst setTime = () => ({\n  type: SET_TIME,\n});\n\nexport const timerThunk = () => (dispatch) => {\n  const TIMER_DELAY = 1000;\n  const timerID = setInterval(() => {\n    dispatch(setTime());\n  }, TIMER_DELAY);\n\n  dispatch(startTimer(timerID));\n};\n\nexport const stopTimer = () => ({\n  type: STOP_TIMER,\n});\n\nexport const resetTimer = () => ({\n  type: RESET_TIMER,\n});\n\nexport default getQuestions;\n","import React, { Component } from 'react';\nimport { func, bool } from 'prop-types';\nimport { BsGearFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport showLogo from '../assets/showLogo.png';\nimport './LoginForm.css';\n\nexport default class LoginForm extends Component {\n  inputs() {\n    const { onChange: handleInputChange } = this.props;\n    return (\n      <div>\n        <div className=\"label-float\">\n          <input\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            placeholder=\"Nome\"\n            onChange={ handleInputChange }\n            name=\"name\"\n            id=\"name\"\n            required\n          />\n        </div>\n        <div className=\"label-float\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n            placeholder=\"Email\"\n            onChange={ handleInputChange }\n            id=\"email\"\n            required\n          />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { handleLogin, disableBtn } = this.props;\n    return (\n      <form className=\"form\">\n        <img src={ showLogo } width=\"160px\" alt=\"logo\" className=\"logo\" />\n        {this.inputs()}\n        <Link to=\"/jogo\">\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ disableBtn }\n            onClick={ handleLogin }\n          >\n            Jogar\n          </button>\n        </Link>\n        <Link to=\"/configuracoes\">\n          <BsGearFill\n            className=\"config\"\n            type=\"button\"\n            data-testid=\"btn-settings\"\n          >\n            Configurações\n          </BsGearFill>\n        </Link>\n      </form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  onChange: func,\n  handleLogin: func,\n  disableBtn: bool,\n}.isRequired;\n","import React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { saveStorage } from '../helpers/storage';\nimport { saveUser } from '../redux/actions/actions';\n\nimport LoginForm from '../components/LoginForm';\nimport showDoMilhao from '../assets/showDoMilhao.ogg';\n\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      disableBtn: true,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.verifyName = this.verifyName.bind(this);\n    this.checkLogin = this.checkLogin.bind(this);\n  }\n\n  handleInputChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value }, () => {\n      this.checkLogin();\n    });\n  }\n\n  handleLogin() {\n    const { name, email } = this.state;\n    const { saveUserLogin } = this.props;\n\n    saveUserLogin({ name, email });\n    saveStorage('state', JSON.stringify({ player: { score: 0 } }));\n  }\n\n  verifyEmail(email) {\n    const emailRegex = /^[a-z0-9.]+@[a-z0-9]+\\.com ?$/i;\n    return emailRegex.test(String(email).toLowerCase());\n  }\n\n  verifyName(name) {\n    const minLengthName = 3;\n    return name.length >= minLengthName;\n  }\n\n  checkLogin() {\n    const { name, email } = this.state;\n    const check = this.verifyEmail(email) && this.verifyName(name);\n    this.setState({ disableBtn: !check });\n  }\n\n  render() {\n    const { disableBtn } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"form-container\">\n          <LoginForm\n            onChange={ this.handleInputChange }\n            handleLogin={ this.handleLogin }\n            disableBtn={ disableBtn }\n          />\n          <ReactAudioPlayer src={ showDoMilhao } autoPlay controls className=\"music\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  saveUserLogin: func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveUserLogin: (user) => dispatch(saveUser(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { decode } from 'he';\nimport ReactAudioPlayer from 'react-audio-player';\nimport './Alternatives.css';\nimport { setAnswerVisibility, stopTimer } from '../redux/actions/actions';\n\nconst CORRECT = 'correct-answer';\nconst WRONG = 'wrong-answer';\n\nclass Alternative extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showImg: false,\n      showFaustao: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.toasty = this.toasty.bind(this);\n  }\n\n  toasty(e) {\n    console.log(e.target.name);\n    if (e.target.name === 'correct-answer') {\n      return (\n        this.setState({ showImg: true })\n      );\n    }\n    return (this.setState({ showFaustao: true }));\n  }\n\n  imgToasty() {\n    const { showImg } = this.state;\n    console.log('toasty foi chamada');\n    if (showImg === true) {\n      return (\n        <div>\n          <img src=\"https://images.uncyc.org/pt/2/26/Toasty.png\" alt=\"toasty\" className=\"toasty\" />\n          <ReactAudioPlayer\n            src=\"https://www.myinstants.com/media/sounds/toasty_tfCWsU6.mp3\"\n            autoPlay\n            controls\n            className=\"music\"\n          />\n        </div>\n      ); // https://www.myinstants.com/media/sounds/certa-resposta.mp3\n    }\n  }\n\n  imgFaustao() {\n    const { showFaustao } = this.state;\n    console.log('faustao foi chamada');\n\n    if (showFaustao === true) {\n      return (\n        <div>\n          <img src=\"https://dbriefing.com.br/blog/wp-content/uploads/2018/10/errou-faustao-gif.gif\" alt=\"errou\" className=\"errou\" />\n          <ReactAudioPlayer\n            src=\"https://www.myinstants.com/media/sounds/errou_3.mp3\"\n            autoPlay\n            controls\n            className=\"music\"\n          />\n        </div>\n      );\n    }\n  }\n\n  handleClick(e) {\n    const { setAnswerVisibilityDispatch, verifyAnswer, stopTimerDispatch } = this.props;\n    setAnswerVisibilityDispatch('show');\n    stopTimerDispatch();\n    verifyAnswer(e);\n    this.toasty(e);\n  }\n\n  render() {\n    const { alternative, correctAnswer, answerVisibility } = this.props;\n    console.log(correctAnswer);\n    return (\n      <div>\n        <button\n          type=\"button\"\n          className={ `${answerVisibility} btn-answer` }\n          name={ alternative === correctAnswer ? CORRECT : WRONG }\n          data-testid={ alternative === correctAnswer ? CORRECT : WRONG }\n          onClick={ this.handleClick }\n          disabled={ answerVisibility === 'show' }\n        >\n          {decode(alternative)}\n        </button>\n        {this.imgToasty()}\n        {this.imgFaustao()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game }) => ({\n  answerVisibility: game.answer_visibility,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAnswerVisibilityDispatch: (visibility) => dispatch(setAnswerVisibility(visibility)),\n  stopTimerDispatch: () => dispatch(stopTimer()),\n});\n\nAlternative.propTypes = {\n  alternative: string,\n  correctAnswer: string,\n  answerVisibility: string,\n  setAnswerVisibilityDispatch: func,\n  verifyAnswer: func,\n  stopTimerDispatch: func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alternative);\n","import React, { Component } from 'react';\nimport { number, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setAnswerVisibility, stopTimer, timerThunk } from '../redux/actions/actions';\n\nclass Timer extends Component {\n  componentDidMount() {\n    const { startTimer } = this.props;\n    startTimer();\n  }\n\n  componentDidUpdate() {\n    const { time, stopTimerDispatch, setAnswerVisibilityDispatch } = this.props;\n    if (!time) {\n      stopTimerDispatch();\n      setAnswerVisibilityDispatch('show');\n    }\n  }\n\n  render() {\n    const { time } = this.props;\n    return (\n      <div className=\"timer\">\n        {time}\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  time: number,\n  stopTimerDispatch: func,\n  setAnswerVisibilityDispatch: func,\n}.isRequired;\n\nconst mapStateToProps = ({ timer }) => ({\n  time: timer.time,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  startTimer: () => dispatch(timerThunk()),\n  stopTimerDispatch: () => dispatch(stopTimer()),\n  setAnswerVisibilityDispatch: (visibility) => dispatch(setAnswerVisibility(visibility)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, { Component } from 'react';\nimport { string, shape, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { decode } from 'he';\nimport Alternative from './Alternative';\nimport Timer from './Timer';\nimport { saveStorage } from '../helpers/storage';\nimport { updateScore } from '../redux/actions/actions';\nimport './Question.css';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n\n    this.verifyAnswer = this.verifyAnswer.bind(this);\n    this.calcScore = this.calcScore.bind(this);\n    this.difficultyConditional = this.difficultyConditional.bind(this);\n    this.saveInStorage = this.saveInStorage.bind(this);\n  }\n\n  async verifyAnswer({ target }) {\n    const { question, updateScoreDispatch } = this.props;\n    const { correct_answer: correctAnswer } = question;\n\n    if (target.innerHTML === correctAnswer) {\n      await updateScoreDispatch(this.calcScore());\n    }\n\n    this.saveInStorage();\n  }\n\n  saveInStorage() {\n    const { player } = this.props;\n    saveStorage('state', JSON.stringify({ player }));\n  }\n\n  calcScore() {\n    const { time } = this.props;\n    const SCORE_PARAM = 10;\n    return SCORE_PARAM + (time * this.difficultyConditional());\n  }\n\n  difficultyConditional() {\n    const { question: { difficulty } } = this.props;\n    switch (difficulty) {\n    case 'easy':\n      return Number('1');\n    case 'medium':\n      return Number('2');\n    case 'hard':\n      return Number('3');\n    default:\n      return 0;\n    }\n  }\n\n  render() {\n    const { question: {\n      question = '',\n      category,\n      aleatory_answers = [],\n      correct_answer: correctAnswer,\n    } } = this.props;\n    const questionReplaced = decode(question);\n\n    return (\n      <div>\n        <Timer />\n        <div className=\"question-container\">\n          <div className=\"category\">\n            <h3>Category:</h3>\n            <h3 data-testid=\"question-category\">{category}</h3>\n          </div>\n          <h2 data-testid=\"question-text\">{questionReplaced}</h2>\n          <div className=\"answers\">\n            {aleatory_answers.map((alternative, index) => (\n              <Alternative\n                key={ index }\n                correctAnswer={ correctAnswer }\n                alternative={ alternative }\n                verifyAnswer={ this.verifyAnswer }\n              />))}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game, timer }) => ({\n  player: game.player,\n  time: timer.time,\n  timerID: timer.timerID,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateScoreDispatch: (score) => dispatch(updateScore(score)),\n});\n\nQuestion.propTypes = {\n  question: shape({\n    category: string,\n    question: string,\n  }),\n  updateScoreDispatch: func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { string, number } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const { name, score, gravatarEmail } = this.props;\n    return (\n      <header className=\"header\">\n        <Link to=\"/\">\n          <img\n            src={ gravatarEmail }\n            alt=\"avatar\"\n            data-testid=\"header-profile-picture\"\n            className=\"gravatar-email\"\n          />\n        </Link>\n        <h2 data-testid=\"header-player-name\">{ `Name: ${name}` }</h2>\n        <p data-testid=\"header-score\" className=\"score\">{ score }</p>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.user.name,\n  score: state.game.player.score,\n  gravatarEmail: state.game.player.gravatarEmail,\n  email: state.user.email,\n});\n\nHeader.propTypes = {\n  name: string,\n  score: number,\n  gravatarEmail: string,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { func, string, number, objectOf, shape } from 'prop-types';\nimport {\n  lastQuestion,\n  nextQuestion,\n  resetTimer,\n  setAnswerVisibility,\n  timerThunk,\n} from '../redux/actions/actions';\nimport { saveRanking } from '../helpers/storage';\n\nclass NextQuestionBtn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const {\n      nextQuestionDispatch,\n      setAnswerVisibilityDispatch,\n      lastQuestionDispatch,\n      questions,\n      currentQuestionIndex,\n      resetTimerDispatch,\n      startTimer,\n      player,\n    } = this.props;\n\n    if (currentQuestionIndex === questions.length - 1) {\n      lastQuestionDispatch(true);\n      saveRanking(player);\n    } else {\n      nextQuestionDispatch();\n      resetTimerDispatch();\n      startTimer();\n    }\n    setAnswerVisibilityDispatch('hide');\n  }\n\n  render() {\n    return (\n      <button\n        type=\"button\"\n        className=\"button-next\"\n        data-testid=\"btn-next\"\n        onClick={ this.handleClick }\n      >\n        Próxima Pergunta\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game }) => ({\n  questions: game.questions,\n  currentQuestionIndex: game.currentQuestionIndex,\n  player: game.player,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  nextQuestionDispatch: () => dispatch(nextQuestion()),\n  setAnswerVisibilityDispatch: (visibility) => dispatch(setAnswerVisibility(visibility)),\n  lastQuestionDispatch: (redirect) => dispatch(lastQuestion(redirect)),\n  resetTimerDispatch: () => dispatch(resetTimer()),\n  startTimer: () => dispatch(timerThunk()),\n});\n\nNextQuestionBtn.propTypes = {\n  nextQuestionDispatch: func,\n  setAnswerVisibilityDispatch: func,\n  resetTimerDispatch: func,\n  player: objectOf(shape({\n    name: string,\n    gravatarEmail: string,\n    score: number,\n    assertions: number,\n  })),\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextQuestionBtn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Redirect } from 'react-router-dom';\nimport Question from '../components/Question';\nimport { getQuestionsThunk } from '../redux/actions/actions';\nimport Header from '../components/Header';\n\nimport './Jogo.css';\nimport NextQuestionBtn from '../components/NextQuestionBtn';\n\nclass Jogo extends Component {\n  componentDidMount() {\n    const { getQuestions } = this.props;\n\n    getQuestions();\n  }\n\n  render() {\n    const {\n      answerVisibility,\n      questions,\n      currentQuestionIndex,\n      redirectToFeedback,\n    } = this.props;\n\n    if (redirectToFeedback) {\n      return <Redirect to=\"/feedback\" />;\n    }\n\n    return (\n      <div className=\"game-container\">\n        <div>\n          <Header />\n        </div>\n        {questions && questions.length && questions[currentQuestionIndex]\n        && <Question question={ questions[currentQuestionIndex] } />}\n\n        { answerVisibility === 'show' && <NextQuestionBtn /> }\n        <ReactAudioPlayer\n          src=\"https://www.myinstants.com/media/sounds/perguntashowdomilhao.mp3\"\n          autoPlay\n          controls\n          className=\"music\"\n        />\n      </div>\n    );\n  }\n}\n\nJogo.propTypes = {\n  email: PropTypes.string,\n  nome: PropTypes.string,\n  timeID: PropTypes.string,\n  answerVisibility: PropTypes.string,\n  redirectToFeedback: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = ({ game, timer }) => ({\n  timeID: timer.time,\n  answerVisibility: game.answer_visibility,\n  questions: game.questions,\n  currentQuestionIndex: game.currentQuestionIndex,\n  redirectToFeedback: game.redirectToFeedback,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getQuestions: (payload) => dispatch(getQuestionsThunk(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jogo);\n","import React from 'react';\n\nclass Configuracoes extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n      </div>\n    );\n  }\n}\n\nexport default Configuracoes;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { number } from 'prop-types';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst MIN_ASSERTIONS = 3;\n\nclass FeedbackMsg extends Component {\n  renderMessage() {\n    const { assertions } = this.props;\n\n    if (assertions < MIN_ASSERTIONS) {\n      return (\n        <div>\n          <h1>Podia ser melhor...</h1>\n          <ReactAudioPlayer\n            src=\"https://www.myinstants.com/media/sounds/perdeu_8w6FeZM.mp3\"\n            autoPlay\n            controls\n            className=\"music\"\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>Mandou bem!</h1>\n        <ReactAudioPlayer\n          src=\"https://www.myinstants.com/media/sounds/ayrton-senna-tema-da-vitoria.mp3\"\n          autoPlay\n          controls\n          className=\"music\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div data-testid=\"feedback-text\">\n        {this.renderMessage()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game: { player } }) => ({\n  assertions: player.assertions,\n});\n\nFeedbackMsg.propTypes = {\n  assertions: number,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(FeedbackMsg);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass FeedbackResults extends Component {\n  render() {\n    const { score, assertions } = this.props;\n    return (\n      <div>\n        <h3>\n          Total de pontos:\n          {' '}\n          <span data-testid=\"feedback-total-score\">{ score }</span>\n        </h3>\n\n        <p>\n          Acertou:\n          {' '}\n          <span data-testid=\"feedback-total-question\">\n            { assertions }\n          </span>\n          {' '}\n          {' '}\n          perguntas de\n          {' '}\n          {/* { totalQuestions } */}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game }) => ({\n  assertions: game.player.assertions,\n  score: game.player.score,\n});\n\nFeedbackResults.propTypes = {\n  score: PropTypes.number,\n  assetions: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(FeedbackResults);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport Header from '../components/Header';\nimport FeedbackMsg from '../components/FeedbackMsg';\nimport FeedbackResults from '../components/FeedbackResults';\nimport { lastQuestion } from '../redux/actions/actions';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    const { setRedirect } = this.props;\n    setRedirect(false);\n  }\n\n  render() {\n    return (\n      <div className=\"feedback-container\">\n        <Header />\n        <div className=\"feedback\">\n          <FeedbackMsg />\n          <FeedbackResults />\n        </div>\n        <div className=\"btn-play-again\">\n          <Link\n            to=\"/\"\n            data-testid=\"btn-play-again\"\n          >\n            Jogar novamente\n          </Link>\n        </div>\n        <div className=\"btn-ranking\">\n          <Link\n            to=\"/ranking\"\n            data-testid=\"btn-ranking\"\n          >\n            Ver Ranking\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRedirect: (redirect) => dispatch(lastQuestion(redirect)),\n});\n\nFeedback.propTypes = {\n  setRedirect: func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Feedback);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Audioslave from '../assets/Audioslave.ogg';\nimport { getRanking } from '../helpers/storage';\nimport './Ranking.css';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ranking: [],\n    };\n\n    this.loadRanking = this.loadRanking.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadRanking();\n  }\n\n  loadRanking() {\n    const ranking = this.sortRanking(getRanking());\n    this.setState({ ranking });\n  }\n\n  sortRanking(ranking) {\n    const sortedRank = ranking\n      .map(({ score }) => score)\n      .sort((a, b) => b - a)\n      .reduce((rank, score) => {\n        const objPlayer = ranking.find((player) => player.score === score);\n        return [...rank, objPlayer];\n      }, []);\n\n    return sortedRank;\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <div className=\"ranking-container\">\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <button className=\"btn-go-home\" data-testid=\"btn-go-home\" type=\"button\">\n          <Link to=\"/\">\n            VOLTAR\n          </Link>\n        </button>\n        <div>\n          <ol className=\"title-ranking\">\n            <li>User</li>\n            <li>Score</li>\n          </ol>\n        </div>\n        <ol className=\"ranking\">\n          {ranking\n        && ranking.map(({ name, score, gravatarEmail }, index) => (\n          <li key={ index } className=\"ranking-list\">\n            <div className=\"user-data\">\n              <img src={ gravatarEmail } alt=\"player gravatar\" />\n              <h2 data-testid={ `player-name-${index}` }>{ name }</h2>\n            </div>\n            <h3 data-testid={ `player-score-${index}` }>{score}</h3>\n          </li>\n        ))}\n        </ol>\n        <ReactAudioPlayer src={ Audioslave } autoPlay controls className=\"music\" />\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from '../pages/Login';\nimport Jogo from '../pages/Jogo';\nimport Configuracoes from '../pages/Configuracoes';\nimport Feedback from '../pages/Feedback';\nimport Ranking from '../pages/Ranking';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/jogo\" component={ Jogo } />\n        <Route path=\"/configuracoes\" component={ Configuracoes } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport Routes from './components/routes';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SAVE_USER } from '../actions/actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_USER:\n    return {\n      ...state,\n      name: action.payload.name,\n      email: action.payload.email,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default loginReducer;\n","import md5 from 'crypto-js/md5';\n\nconst getGravatar = (email) => {\n  const hashMD5 = md5(email).toString();\n  const gravatar = `https://www.gravatar.com/avatar/${hashMD5}`;\n  return gravatar;\n};\n\nexport default getGravatar;\n","import getGravatar from '../../helpers/getGravatar';\nimport {\n  GET_QUESTIONS,\n  GET_QUESTIONS_SUCCESS,\n  UPDATE_SCORE,\n  SET_ANSWER_VISIBILITY,\n  NEXT_QUESTION,\n  LAST_QUESTION,\n  SAVE_USER,\n} from '../actions/actions';\n\nconst INITIAL_STATE = {\n  player: {\n    name: '',\n    gravatarEmail: '',\n    assertions: 0,\n    score: 0,\n  },\n  loading: false,\n  questions: [],\n  currentQuestionIndex: 0,\n  answer_visibility: 'hide',\n  redirectToFeedback: false,\n};\n\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_USER:\n    return {\n      ...state,\n      player: {\n        ...state.player,\n        name: action.payload.name,\n        gravatarEmail: getGravatar(action.payload.email),\n        assertions: 0,\n        score: 0,\n      },\n    };\n  case GET_QUESTIONS:\n    return {\n      ...state,\n      loading: true,\n    };\n  case GET_QUESTIONS_SUCCESS:\n    return {\n      ...state,\n      loading: false,\n      questions: [...action.payload],\n    };\n  case SET_ANSWER_VISIBILITY:\n    return {\n      ...state,\n      answer_visibility: action.payload,\n    };\n  case NEXT_QUESTION:\n    return {\n      ...state,\n      currentQuestionIndex: state.currentQuestionIndex + 1,\n    };\n  case UPDATE_SCORE:\n    return { ...state,\n      player: { ...state.player,\n        score: state.player.score + action.payload,\n        assertions: state.player.assertions + 1 } };\n  case LAST_QUESTION:\n    return {\n      ...state,\n      currentQuestionIndex: 0,\n      redirectToFeedback: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default gameReducer;\n","import { RESET_TIMER, SET_TIME, START_TIMER, STOP_TIMER } from '../actions/actions';\n\nconst INITIAL_STATE = {\n  time: 30,\n  timerID: '',\n};\n\nconst timerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case START_TIMER:\n    return {\n      ...state,\n      timerID: action.payload,\n    };\n  case SET_TIME:\n    return {\n      ...state,\n      time: state.time - 1,\n    };\n  case STOP_TIMER: {\n    clearInterval(state.timerID);\n    return state;\n  }\n  case RESET_TIMER:\n    return {\n      ...state,\n      time: 30,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default timerReducer;\n","import { combineReducers } from 'redux';\nimport user from './login';\nimport game from './jogo';\nimport timer from './timer';\n\nconst reducers = combineReducers({ user, game, timer });\n\nexport default reducers;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers/reducers';\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}